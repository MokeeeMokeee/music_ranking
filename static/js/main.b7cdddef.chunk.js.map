{"version":3,"sources":["theme/theme.ts","components/data/queries.ts","components/modal/Modal.tsx","components/header/Header.tsx","components/TopPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["colors","blue","green","coral","gold","silver","bronze","purple","white","black","grey10","grey20","grey30","grey40","grey50","grey60","secondaryColors","blue10","blue20","blue30","blue40","blue50","green10","green20","green30","green40","green50","purple10","purple20","purple30","purple40","purple50","coral10","coral20","coral30","coral40","coral50","gold10","gold20","gold30","gold40","gold50","fontSizes","headline1","headline2","headline3","headline4","headline5","headline6","subtitle1","subtitle2","body1","body2","button","caption","overline","dataQuery","Container","styled","div","props","rgba","theme","CloseButton","MainContent","FormContainer","SubmitButton","NotSubmitButton","ButtonContainer","InputContainer","TextContainer","Modal","history","useHistory","useState","title","setTitle","image","setImage","url","setUrl","isSubmit","setSubmit","handleChange","event","target","name","value","console","log","useEffect","type","onChange","onClick","setModal","InsertData","gql","axios","post","query","print","variables","then","res","alert","go","submit","AddButton","Header","isModalOpen","Image","img","TopRankConatiner","TopRankContent","FirstRank","h2","SecondRank","ThirdRank","TopTitle","p","RankContainer","RankContent","RankImage","RankTitle","RankCount","PageRedirect","a","TableHeader","ViewContent","AddCounter","TopRank","TopPage","datas","setData","AddCount","dataId","count","method","data","result","fetchData","map","items","index","href","link","src","id","GlobalStyle","createGlobalStyle","reset","App","Theme","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b7cdddef.chunk.js","sourcesContent":["const colors = {\n  blue: '#2179ee',\n  green: '#00cc9a',\n  coral: '#ff6759',\n  gold: '#ffdf00',\n  silver: '#c4cace',\n  bronze: '#815a2b',\n  purple: '#7537ef',\n  white: '#ffffff',\n  black: '#000000',\n\n  grey10: '#f3f4f8',\n  grey20: '#e1e5eb',\n  grey30: '#c2c6cc',\n  grey40: '#9ea2a8',\n  grey50: '#686c73',\n  grey60: '#30363d',\n}\n\nconst secondaryColors = {\n  blue10: '#ade7ff',\n  blue20: '#61bcff',\n  blue30: '#2179ee',\n  blue40: '#1f4ab4',\n  blue50: '#1d2064',\n  green10: '#b5ffcb',\n  green20: '#5dffa3',\n  green30: '#00cc9a',\n  green40: '#219a8a',\n  green50: '#183f51',\n  purple10: '#dec7ff',\n  purple20: '#a673ff',\n  purple30: '#7537ef',\n  purple40: '#4e23b6',\n  purple50: '#2d1b64',\n  coral10: '#ffc6b3',\n  coral20: '#ff8e75',\n  coral30: '#ff6759',\n  coral40: '#eb312a',\n  coral50: '#7b1e30',\n  gold10: '#ffedc2',\n  gold20: '#ffda8b',\n  gold30: '#f0b95b',\n  gold40: '#e5a229',\n  gold50: '#6a4a24',\n}\n\nconst fontSizes = {\n  headline1: '96px',\n  headline2: '60px',\n  headline3: '48px',\n  headline4: '34px',\n  headline5: '24px',\n  headline6: '20px',\n  subtitle1: '16px',\n  subtitle2: '14px',\n  body1: '16px',\n  body2: '14px',\n  button: '14px',\n  caption: '12px',\n  overline: '10px',\n}\n\nexport { colors, secondaryColors, fontSizes }\n","export const dataQuery = `\n  query DataQuery {\n    data(order_by: {count: desc}) {\n      id\n      count\n      image\n      link\n      title\n    }\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { rgba } from 'polished'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport { print } from 'graphql'\nimport gql from 'graphql-tag'\n\n/**\n * styled\n */\nconst Container = styled.div`\n  z-index: 999;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) => rgba(props.theme.colors.black, 0.3)};\n`\n\nconst CloseButton = styled.button`\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  cursor: pointer;\n`\n\nconst MainContent = styled.div`\n  background-color: ${(props) => props.theme.colors.white};\n  width: 26rem;\n  height: 26rem;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n`\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`\n\nconst SubmitButton = styled.button`\n  color: ${(props) => props.theme.colors.green};\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid ${(props) => props.theme.colors.green};\n  border-radius: 3px;\n  cursor: pointer;\n`\n\nconst NotSubmitButton = styled.button`\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`\n\nconst InputContainer = styled.div`\n  margin: 1rem 0;\n`\n\nconst TextContainer = styled.div`\n  padding: 1rem 3rem 0 3rem;\n  color: ${(props) => props.theme.colors.coral};\n`\n\ninterface ModalProps {\n  setModal: any\n}\n\nconst Modal: React.FC<ModalProps> = (props: { setModal: (arg0: boolean) => void }) => {\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [image, setImage] = useState('')\n  const [url, setUrl] = useState('')\n\n  const [isSubmit, setSubmit] = useState(false)\n\n  const handleChange = (event: any) => {\n    switch (event.target.name) {\n      case 'title':\n        setTitle(event.target.value)\n        break\n      case 'image':\n        setImage(event.target.value)\n        break\n      case 'url':\n        setUrl(event.target.value)\n        break\n      default:\n        console.log('key not found')\n    }\n  }\n\n  useEffect(() => {\n    title !== '' && image !== '' && url !== ''\n      ? setSubmit(true)\n      : setSubmit(false)\n  })\n\n  function closeModal() {\n    props.setModal(false)\n  }\n\n  function submit() {\n    console.log(`title: ${title}`)\n    console.log(`image: ${image}`)\n    console.log(`url: ${url}`)\n    const InsertData = gql`\n      mutation Insert_data($image: String, $title: String, $url: String) {\n        insert_data(objects: { image: $image, link: $url, title: $title }) {\n          returning {\n            id\n          }\n        }\n      }\n    `\n\n    axios\n      .post('https://music-ranking-moke.herokuapp.com/v1/graphql', {\n        query: print(InsertData),\n        variables: {\n          image: `${image}`,\n          url: `${url}`,\n          title: `${title}`,\n        },\n      })\n      .then((res: any) => {\n        console.log(res)\n        alert('追加した。')\n        setTitle('')\n        setImage('')\n        setUrl('')\n        history.go(0)\n      })\n    // axios.({\n    //   url: 'https://music-ranking-moke.herokuapp.com/v1/graphql',\n    //   method: 'post',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   data: {\n    //     query: `\n    //       mutation {\n    //         insert_data(objects: {image: ${image}, link: ${url}, title: ${title}}) {\n    //           returning {\n    //             id\n    //           }\n    //          }\n    //       }\n    //     `,\n    //   },\n    // })\n    //   .then((result) => {\n    //     console.log(result.data)\n    //     alert('追加した。')\n    //     setTitle('')\n    //     setImage('')\n    //     setUrl('')\n    //     // history.go(0)\n    //   })\n    //   .catch((err) => {\n    //     console.log(err)\n    //   })\n    // title, image, urlで作ってidは自動生成。\n    // countは初期値で0を入れる。\n  }\n\n  function checkContent() {\n    if (title === '') alert('タイトルを入力してください')\n    if (image === '') alert('画像(URL)を入力してください')\n    if (url === '') alert('URLを入力してください')\n  }\n\n  return (\n    <Container>\n      <MainContent>\n        <TextContainer>\n          <p>すべて入力してください。</p>\n          <p>間違っても修正しません。</p>\n        </TextContainer>\n        <FormContainer>\n          <InputContainer>\n            曲名:\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </InputContainer>\n          <InputContainer>\n            画像(URL):\n            <input\n              type=\"text\"\n              name=\"image\"\n              value={image}\n              onChange={handleChange}\n            />\n          </InputContainer>\n          <InputContainer>\n            動画URL:\n            <input type=\"text\" name=\"url\" value={url} onChange={handleChange} />\n          </InputContainer>\n        </FormContainer>\n        <ButtonContainer>\n          <CloseButton onClick={() => closeModal()}>閉じる</CloseButton>\n          {isSubmit ? (\n            <SubmitButton onClick={() => submit()}>送信</SubmitButton>\n          ) : (\n            <NotSubmitButton onClick={() => checkContent()}>\n              送信\n            </NotSubmitButton>\n          )}\n        </ButtonContainer>\n      </MainContent>\n    </Container>\n  )\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\n/**\n * components\n */\nimport Modal from '../modal/Modal'\n\n/**\n * styled\n */\nconst Container = styled.div`\n  background-color: ${(props) => props.theme.colors.blue};\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem 1rem;\n  align-items: center;\n  > p {\n    color: ${(props) => props.theme.colors.white};\n    font-weight: bold;\n  }\n`\n\nconst AddButton = styled.button`\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  cursor: pointer;\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = (props) => {\n  const [isModalOpen, setModal] = useState(false)\n\n  function modal() {\n    setModal(true)\n  }\n  return (\n    <Container>\n      <p>{props.title}</p>\n      <AddButton onClick={() => modal()}>追加</AddButton>\n      {isModalOpen ? <Modal setModal={setModal} /> : null}\n    </Container>\n  )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { rgba } from 'polished'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { dataQuery } from './data/queries'\nimport { submitData } from './data/mutaitions'\n\n/**\n * components\n */\nimport Header from './header/Header'\n\n/**\n * styled\n */\nconst Image = styled.img`\n  max-width: 15rem;\n  max-height: 15rem;\n  min-width: 15rem;\n  min-height: 15rem;\n  @media screen and (max-width: 800px) {\n    max-width: 20rem;\n    max-height: 20rem;\n    min-width: 20rem;\n    min-height: 20rem;\n  }\n  object-fit: cover;\n`\n\nconst TopRankConatiner = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin: 1rem 0;\n  @media screen and (max-width: 800px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nconst TopRankContent = styled.div`\n  position: relative;\n  @media screen and (max-width: 800px) {\n    margin-bottom: 1rem;\n  }\n`\n\nconst FirstRank = styled.h2`\n  padding: 1rem 1rem 3rem 1rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: table;\n  font-weight: bold;\n  -webkit-text-stroke: 0.5px #000;\n  color: #fff;\n  background-color: ${(props) => rgba(props.theme.colors.gold, 0.7)};\n`\nconst SecondRank = styled.h2`\n  padding: 1rem 1rem 3rem 1rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: table;\n  font-weight: bold;\n  -webkit-text-stroke: 0.5px #000;\n  color: #fff;\n  background-color: ${(props) => rgba(props.theme.colors.silver, 0.7)};\n`\nconst ThirdRank = styled.h2`\n  padding: 1rem 1rem 3rem 1rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: table;\n  font-weight: bold;\n  -webkit-text-stroke: 0.5px #000;\n  color: #fff;\n  background-color: ${(props) => rgba(props.theme.colors.bronze, 0.7)};\n`\n\nconst TopTitle = styled.p`\n  font-size: ${(props) => props.theme.fontSizes.headline5};\n  font-weight: bold;\n`\n\nconst RankContainer = styled.div`\n  border: 2px solid ${(props) => props.theme.colors.black};\n  margin: 1rem 2rem;\n`\n\nconst RankContent = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid;\n`\n\n// const Rank = styled.p`\n//   flex: 1;\n//   text-align: center;\n// `\n\nconst RankImage = styled.img`\n  max-width: 7rem;\n  max-height: 7rem;\n  min-width: 5rem;\n  min-height: 5rem;\n  flex: 1;\n  object-fit: cover;\n`\n\nconst RankTitle = styled.p`\n  flex: 5;\n  padding-left: 1rem;\n  border: solid ${(props) => props.theme.colors.black};\n  border-width: 0 1px 0 1px;\n`\n\nconst RankCount = styled.p`\n  flex: 1;\n  text-align: center;\n`\n\nconst PageRedirect = styled.a`\n  text-decoration: none;\n  color: inherit;\n  flex: 6;\n`\n\nconst TableHeader = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  border-bottom: 2px solid;\n  p {\n    padding: 1rem 0;\n  }\n  p:nth-child(1) {\n    max-width: 7rem;\n    min-width: 5rem;\n    flex: 1;\n  }\n  p:nth-child(2) {\n    flex: 5;\n    border: solid ${(props) => props.theme.colors.black};\n    border-width: 0 2px 0 2px;\n  }\n  p:nth-child(3) {\n    flex: 1;\n  }\n`\n\nconst ViewContent = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst AddCounter = styled.button`\n  color: palevioletred;\n  font-size: 1em;\n  padding: 0.25rem;\n  margin-right: 0.5rem;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`\n\nconst TopRank = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`\n\ninterface TopPageProps {}\n\ninterface DatasProps {\n  id: number\n  title: string\n  image: string\n  link: string\n  count: number\n  index: number\n}\n\nconst TopPage: React.FC<TopPageProps> = () => {\n  // countの仮置き場として使いたい。\n  // いまはloopするErrorを修正してから使う感じで。\n  // const [hoge, setCount] = useState(0)\n  let test: number = 0\n  const history = useHistory()\n  // dataはaxiosを使って入れる。\n  const [datas, setData] = useState<DatasProps[]>([])\n\n  useEffect(() => {\n    console.log(dataQuery)\n    const fetchData = async () => {\n      await axios({\n        url: 'https://music-ranking-moke.herokuapp.com/v1/graphql',\n        method: 'post',\n        data: { query: `${dataQuery}` },\n      }).then((result) => {\n        console.log(result.data.data.data)\n        setData(result.data.data.data)\n      })\n    }\n\n    fetchData()\n  }, [])\n\n  function AddCount(dataId: number, count: number) {\n    console.log(dataId)\n    console.log(count + 1)\n    axios({\n      url: 'https://music-ranking-moke.herokuapp.com/v1/graphql',\n      method: 'post',\n      data: {\n        query: `mutation update_data{\n          update_data(\n            where: {id: {_eq: ${dataId}}},\n            _set:{\n              count: ${count + 1}\n            }\n          ) {\n            returning{\n              id\n            title\n            }\n          }\n        }`,\n      },\n    }).then((result) => {\n      console.log(result.data)\n      alert('ok')\n      history.go(0)\n    })\n    // dataのIDでcountを一つ上げる。\n    // 無事に処理が終わったらalertとhistory.go(0)\n    // でページ事態をreload\n    // alert('投票しました')\n    // history.go(0)\n  }\n\n  return (\n    <>\n      <Header title={'TopPage'} />\n      <TopRankConatiner>\n        {datas != null\n          ? datas.map((items, index) => {\n              return (\n                <>\n                  {index < 3 ? (\n                    <TopRankContent>\n                      <PageRedirect href={items.link}>\n                        {index === 0 ? (\n                          <FirstRank>{index + 1}</FirstRank>\n                        ) : index === 1 ? (\n                          <SecondRank>{index + 1}</SecondRank>\n                        ) : (\n                          <ThirdRank>{index + 1}</ThirdRank>\n                        )}\n                        <Image src={`${items.image}`} />\n                        <TopTitle>{items.title}</TopTitle>\n                      </PageRedirect>\n                      <TopRank>\n                        <AddCounter\n                          onClick={() => AddCount(items.id, items.count)}\n                        >\n                          b\n                        </AddCounter>\n                        <p>{items.count}</p>\n                      </TopRank>\n                    </TopRankContent>\n                  ) : null}\n                </>\n              )\n            })\n          : null}\n      </TopRankConatiner>\n      <RankContainer>\n        <TableHeader>\n          <p>サムネ</p>\n          <p>曲名</p>\n          <p>投票数</p>\n        </TableHeader>\n        {datas != null\n          ? datas.map((items, index) => {\n              return (\n                <>\n                  {index < 3 ? null : (\n                    <RankContent>\n                      <PageRedirect href={items.link}>\n                        <ViewContent>\n                          <RankImage src={`${items.image}`} />\n                          <RankTitle>{items.title}</RankTitle>\n                        </ViewContent>\n                      </PageRedirect>\n                      <RankCount>\n                        <AddCounter\n                          onClick={() => AddCount(items.id, items.count)}\n                        >\n                          b\n                        </AddCounter>\n                        {(test = items.count)}\n                      </RankCount>\n                    </RankContent>\n                  )}\n                </>\n              )\n            })\n          : null}\n      </RankContainer>\n    </>\n  )\n}\n\nexport default TopPage\n","import React from 'react'\nimport * as Theme from './theme/theme'\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from 'react-router-dom'\n\n/**\n * components\n */\nimport TopPage from './components/TopPage'\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  /* other styles */\n`\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={Theme}>\n      <GlobalStyle />\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <TopPage />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}